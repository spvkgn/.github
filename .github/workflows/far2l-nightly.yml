name: far2l Nightly
run-name: far2l ${{ github.event_name == 'schedule' && 'ðŸŒ™ Nightly ðŸš€' || 'ðŸš€' }}

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

env:
  REPO: 'elfmz/far2l'

jobs:
  sync:
    if: false # disable for now
    runs-on: ubuntu-latest
    permissions:
      contents: write
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: far2l

      - name: Checkout far2l
        uses: actions/checkout@v3
        with:
          repository: ${{ env.REPO }}
          path: far2l

      - name: Refresh patches
        run: |
          sudo apt update -qq && sudo apt install -y quilt
          ( cd far2l && QUILT_PATCHES=../patches quilt --quiltrc=../.quiltrc push -a --refresh )
          if ! git diff --exit-code patches/ ; then
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add patches/ && git commit -m "Refresh patches" && git push && \
            echo "is_refresh=true" >> $GITHUB_ENV
          else
            echo "No changes"
            echo "is_refresh=false" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Sync files
        if: env.is_refresh == 'true'
        uses: BetaHuhn/repo-file-sync-action@v1
        with:
          GH_PAT: ${{ secrets.PAT }}
          ORIGINAL_MESSAGE: true
          COMMIT_EACH_FILE: false
          SKIP_PR: true

  check:
    # needs: sync
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.gh.outputs.date }}
      sha: ${{ steps.gh.outputs.sha }}
      url: ${{ steps.gh.outputs.url }}
      tag: ${{ steps.gh.outputs.tag }}
      message: ${{ steps.gh.outputs.message }}
      is_active: ${{ steps.activity.outputs.is_active }}
    steps:
      - name: Get metadata from repo
        id: gh
        env:
          REPO: ${{ env.REPO }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH=$(gh api repos/$REPO --jq '.default_branch')
          DATE=$(gh api repos/$REPO/commits/$BRANCH --jq '.commit.committer.date')
          {
            echo "date=$(date --utc -d $DATE +%F)"
            echo "sha=$(gh api repos/$REPO/commits/$BRANCH --jq '.sha[0:7]')"
            echo "url=$(gh api repos/$REPO/commits/$BRANCH --jq '.html_url')"
            # echo "tag=$(gh api repos/$REPO/releases/latest --jq '.tag_name|scan("[(\\d.)]+\\d+")')"
            echo "tag=$(wget -qO- https://raw.githubusercontent.com/$REPO/$BRANCH/packaging/version)"
            echo "message=$(gh api repos/$REPO/commits/$BRANCH | jq -c '.commit.message' | perl -pe 's/^"|"$//g;' -pe "s|(?=#\d+)|$REPO|g")"
          } >> $GITHUB_OUTPUT
          echo "DATE=$DATE" >> $GITHUB_ENV

      - name: Check for repo activity
        id: activity
        env:
          DATE: ${{ env.DATE }}
          URL: ${{ steps.gh.outputs.url }}
        run: |
          TIMESTAMP=$(date --utc -d $DATE +%s)
          DAYS=$(( ( $(date --utc +%s) - $TIMESTAMP ) / 86400 ))
          echo "Repository activity: $(date --utc -d $DATE)"
          echo "Commit: $URL"
          if [ "${{ github.event_name }}" != "schedule" ]; then
            is_active=true
          elif [[ $DAYS -lt 1 ]] ; then
            is_active=true
          else
            echo "Repository not updated within last 24 hours."
            is_active=false
          fi
          echo "is_active=$is_active" >> $GITHUB_OUTPUT

  dispatch:
    needs: check
    permissions:
      contents: write
    if: needs.check.outputs.is_active == 'true'
    strategy:
      matrix:
        repo: [ 'far2l-openwrt', 'far2l-termux', 'far2l-portable', 'far2l-flatpak' ]
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch event to remote repository
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.repository_owner }}/${{ matrix.repo }}
          event-type: build-nightly
          client-payload: |
            {
              "repo": "${{ env.REPO }}",
              "date": "${{ needs.check.outputs.date }}",
              "sha": "${{ needs.check.outputs.sha }}",
              "url": "${{ needs.check.outputs.url }}",
              "tag": "${{ needs.check.outputs.tag }}",
              "message": "${{ needs.check.outputs.message }}"
            }

      - name: Dispatch event to remote repository
        if: false # disable for now
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ matrix.repo }}/dispatches \
            -d @- <<'EOF'
          {
            "event_type": "build-nightly",
            "client_payload": {
              "repo": "${{ env.REPO }}",
              "date": "${{ needs.check.outputs.date }}",
              "sha": "${{ needs.check.outputs.sha }}",
              "url": "${{ needs.check.outputs.url }}",
              "tag": "${{ needs.check.outputs.tag }}",
              "message": "${{ needs.check.outputs.message }}"
            }
          }
          EOF

  mirror:
    needs: check
    if: needs.check.outputs.is_active == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout far2l
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          fetch-depth: 0

      - name: Mirror to Launchpad
        uses: yesolutions/mirror-action@master
        with:
          REMOTE: 'https://git.launchpad.net/~far2l-team/far2l/+git/far2l_upstream'
          GIT_USERNAME: spvkgn
          GIT_PASSWORD: ${{ secrets.LAUNCHPAD_FAR2L_TOKEN }}
          PUSH_ALL_REFS: false
          GIT_REF: master
          DEBUG: true
